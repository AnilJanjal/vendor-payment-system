{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/auth/auth.ts","webpack://office-addin-taskpane/./src/taskpane/payment/paymentService.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// src/taskpane/auth/auth.ts\r\nlocalStorage.removeItem('vendors');\r\ninterface Vendor {\r\n    id: string;\r\n    name: string;\r\n    paymentType: 'Weekly' | 'Biweekly' | 'On-Demand';\r\n    account: 'Account 1' | 'Account 2';\r\n    lastPaymentDate?: Date;\r\n    nextPaymentDate?: Date;\r\n    pendingPayment?: boolean;\r\n}\r\n\r\nexport const AuthService = {\r\n    // Existing authentication methods\r\n    login(username: string, password: string): boolean {\r\n        if (username === \"aniljanjal2000@gmail.com\" && password === \"aniljanjal2000@gmail.com\") {\r\n            localStorage.setItem(\"isAuthenticated\", \"true\");\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    logout(): void {\r\n        localStorage.removeItem(\"isAuthenticated\");\r\n    },\r\n\r\n    isAuthenticated(): boolean {\r\n        return localStorage.getItem(\"isAuthenticated\") === \"true\";\r\n    },\r\n\r\n    // Vendor management methods\r\n    getVendors(): Vendor[] {\r\n        const vendors = localStorage.getItem('vendors');\r\n        return vendors ? JSON.parse(vendors) : [];\r\n    },\r\n\r\n    saveVendors(vendors: Vendor[]): void {\r\n        localStorage.setItem('vendors', JSON.stringify(vendors));\r\n    },\r\n\r\n    addVendor(vendor: Omit<Vendor, 'id'>): Vendor {\r\n        const vendors = this.getVendors();\r\n        const newVendor = {\r\n            ...vendor,\r\n            id: Date.now().toString()\r\n        };\r\n        vendors.push(newVendor);\r\n        this.saveVendors(vendors);\r\n        return newVendor;\r\n    },\r\n\r\n    updateVendor(updatedVendor: Vendor): void {\r\n        const vendors = this.getVendors();\r\n        const index = vendors.findIndex(v => v.id === updatedVendor.id);\r\n        if (index !== -1) {\r\n            vendors[index] = updatedVendor;\r\n            this.saveVendors(vendors);\r\n        }\r\n    },\r\n\r\n    deleteVendor(id: string): void {\r\n    const vendors = this.getVendors().filter(v => v.id !== id);\r\n    this.saveVendors(vendors);\r\n}\r\n};","// src/taskpane/payment/paymentService.ts\r\n\r\nimport { AuthService } from '../auth/auth';\r\n\r\n// Define the Vendor interface that matches AuthService's Vendor structure\r\ninterface Vendor {\r\n    id: string;\r\n    name: string;\r\n    paymentType: 'Weekly' | 'Biweekly' | 'On-Demand';\r\n    account: 'Account 1' | 'Account 2';\r\n    lastPaymentDate?: Date;\r\n    nextPaymentDate?: Date;\r\n    pendingPayment?: boolean;\r\n}\r\n\r\ninterface Payment {\r\n    vendorId: string;\r\n    amount: number;\r\n    date: Date;\r\n    account: 'Account 1' | 'Account 2';\r\n    status: 'completed' | 'pending' | 'failed';\r\n}\r\n\r\nexport const PaymentService = {\r\n    // Account balances\r\n    accountBalances: {\r\n        'Account 1': 200000,\r\n        'Account 2': 200000\r\n    },\r\n\r\n    // Payment rules\r\n    paymentRules: {\r\n        getBaseAmount(vendorId: string): number {\r\n            const idNum = parseInt(vendorId);\r\n            if (idNum >= 1 && idNum <= 5) return 100; // Weekly\r\n            if (idNum >= 6 && idNum <= 10) return 200; // Biweekly (double amount)\r\n            return 0; // On-demand (amount specified manually)\r\n        },\r\n        \r\n        getPaymentSchedule(vendorId: string): 'weekly' | 'biweekly' | 'on-demand' {\r\n            const idNum = parseInt(vendorId);\r\n            if (idNum >= 1 && idNum <= 5) return 'weekly';\r\n            if (idNum >= 6 && idNum <= 10) return 'biweekly';\r\n            return 'on-demand';\r\n        },\r\n\r\n        getDefaultAccount(vendorId: string): 'Account 1' | 'Account 2' {\r\n            const idNum = parseInt(vendorId);\r\n            if (idNum >= 1 && idNum <= 10) return 'Account 1'; // Scheduled vendors\r\n            return 'Account 2'; // On-demand vendors\r\n        }\r\n    },\r\n\r\n    // Process scheduled payments\r\n    async processScheduledPayments(forceProcess = false): Promise<{processed: number, skipped: number, pending: number}> {\r\n    const today = new Date();\r\n    console.log(`Running payment check on ${today.toDateString()}`);\r\n\r\n    // Only check for Friday if not forced\r\n    if (!forceProcess && today.getDay() !== 5) {\r\n        console.log(\"Not Friday - skipping payment processing\");\r\n        return {processed: 0, skipped: 0, pending: 0};\r\n    }\r\n\r\n    const vendors = AuthService.getVendors() as Vendor[];\r\n    const result = {\r\n        processed: 0,\r\n        skipped: 0,\r\n        pending: this.getPendingPayments().length\r\n    };\r\n\r\n    const payments: Payment[] = [];\r\n\r\n    vendors.forEach(vendor => {\r\n        const schedule = this.paymentRules.getPaymentSchedule(vendor.id);\r\n        \r\n        if (schedule === 'on-demand') {\r\n            result.skipped++;\r\n            return;\r\n        }\r\n\r\n        // Process if payment is due or we're forcing processing\r\n        if (forceProcess || (vendor.nextPaymentDate && new Date(vendor.nextPaymentDate).toDateString() === today.toDateString())) {\r\n            const amount = this.paymentRules.getBaseAmount(vendor.id);\r\n            payments.push(this.createPayment(vendor, amount));\r\n        } else {\r\n            result.skipped++;\r\n        }\r\n    });\r\n\r\n    if (payments.length > 0) {\r\n        await this.processPayments(payments);\r\n        result.processed = payments.filter(p => p.status === 'completed').length;\r\n        result.pending = this.getPendingPayments().length;\r\n    }\r\n\r\n    return result;\r\n},\r\n\r\n    // Process on-demand payment\r\n    async processOnDemandPayment(vendorId: string, amount: number): Promise<boolean> {\r\n        const vendor = AuthService.getVendors().find(v => v.id === vendorId) as Vendor | undefined;\r\n        if (!vendor) return false;\r\n\r\n        // Check if scheduled vendor is being paid on-demand\r\n        const schedule = this.paymentRules.getPaymentSchedule(vendorId);\r\n        if (schedule !== 'on-demand') {\r\n            const skipScheduled = confirm(`${vendor.name} is scheduled for ${schedule} payments. Skip next scheduled payment?`);\r\n            if (skipScheduled) {\r\n                vendor.lastPaymentDate = new Date();\r\n                vendor.nextPaymentDate = this.getNextPaymentDate(vendorId);\r\n                AuthService.updateVendor(vendor);\r\n            }\r\n        }\r\n\r\n        const payment = this.createPayment(vendor, amount);\r\n        return this.processPayment(payment);\r\n    },\r\n\r\n    // Retry payment for a specific vendor\r\n    async retryPaymentForVendor(vendorId: string): Promise<boolean> {\r\n        const pendingPayment = this.pendingPayments.find(p => p.vendorId === vendorId);\r\n        if (!pendingPayment) return false;\r\n\r\n        const success = await this.processPayment(pendingPayment);\r\n        if (success) {\r\n            // Remove from pending payments if successful\r\n            this.pendingPayments = this.pendingPayments.filter(p => p.vendorId !== vendorId);\r\n            localStorage.setItem('pendingPayments', JSON.stringify(this.pendingPayments));\r\n        }\r\n        return success;\r\n    },\r\n\r\n    // Helper methods\r\n    createPayment(vendor: Vendor, amount: number): Payment {\r\n        return {\r\n            vendorId: vendor.id,\r\n            amount,\r\n            date: new Date(),\r\n            account: vendor.account,\r\n            status: 'pending'\r\n        };\r\n    },\r\n\r\n    async processPayments(payments: Payment[]): Promise<void> {\r\n        for (const payment of payments) {\r\n            await this.processPayment(payment);\r\n        }\r\n    },\r\n\r\n    async processPayment(payment: Payment): Promise<boolean> {\r\n        if (this.accountBalances[payment.account] >= payment.amount) {\r\n            // Sufficient funds\r\n            this.accountBalances[payment.account] -= payment.amount;\r\n            payment.status = 'completed';\r\n            this.updateVendorPaymentDate(payment.vendorId);\r\n            \r\n            // Update UI\r\n            this.updateAccountBalancesUI();\r\n            return true;\r\n        } else {\r\n            // Insufficient funds\r\n            payment.status = 'pending';\r\n            this.addToPendingPayments(payment);\r\n            \r\n            // Show notification\r\n            const vendor = AuthService.getVendors().find(v => v.id === payment.vendorId);\r\n            if (vendor) {\r\n                alert(`Insufficient funds in ${payment.account} to pay ${vendor.name}. Payment moved to pending.`);\r\n            }\r\n            \r\n            return false;\r\n        }\r\n    },\r\n\r\n    updateVendorPaymentDate(vendorId: string): void {\r\n        const vendor = AuthService.getVendors().find(v => v.id === vendorId) as Vendor | undefined;\r\n        if (vendor) {\r\n            vendor.lastPaymentDate = new Date();\r\n            vendor.nextPaymentDate = this.getNextPaymentDate(vendorId);\r\n            vendor.pendingPayment = false;\r\n            AuthService.updateVendor(vendor);\r\n        }\r\n    },\r\n\r\n    getNextPaymentDate(vendorId: string): Date {\r\n        const date = new Date();\r\n        const schedule = this.paymentRules.getPaymentSchedule(vendorId);\r\n        \r\n        if (schedule === 'weekly') {\r\n            date.setDate(date.getDate() + 7);\r\n        } else if (schedule === 'biweekly') {\r\n            date.setDate(date.getDate() + 14);\r\n        }\r\n        \r\n        return date;\r\n    },\r\n\r\n    getWeekNumber(date: Date): number {\r\n        const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\r\n        const pastDaysOfYear = (date.getTime() - firstDayOfYear.getTime()) / 86400000;\r\n        return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);\r\n    },\r\n\r\n    pendingPayments: [] as Payment[],\r\n\r\n    addToPendingPayments(payment: Payment): void {\r\n        this.pendingPayments.push(payment);\r\n        localStorage.setItem('pendingPayments', JSON.stringify(this.pendingPayments));\r\n    },\r\n\r\n    getPendingPayments(): Payment[] {\r\n        const stored = localStorage.getItem('pendingPayments');\r\n        this.pendingPayments = stored ? JSON.parse(stored) : [];\r\n        return this.pendingPayments;\r\n    },\r\n\r\n    async retryPendingPayments(): Promise<void> {\r\n        const pending = this.getPendingPayments();\r\n        for (const payment of pending) {\r\n            if (this.accountBalances[payment.account] >= payment.amount) {\r\n                await this.processPayment(payment);\r\n            }\r\n        }\r\n        this.updateAccountBalancesUI();\r\n    },\r\n\r\n    updateAccountBalancesUI(): void {\r\n        const account1Element = document.querySelector('#account-balances div:nth-child(1) p');\r\n        const account2Element = document.querySelector('#account-balances div:nth-child(2) p');\r\n        \r\n        if (account1Element) {\r\n            account1Element.textContent = `$${this.accountBalances['Account 1'].toLocaleString()}`;\r\n        }\r\n        if (account2Element) {\r\n            account2Element.textContent = `$${this.accountBalances['Account 2'].toLocaleString()}`;\r\n        }\r\n    }\r\n};","// src/taskpane/taskpane.ts\n\nimport { AuthService } from './auth/auth';\nimport { PaymentService } from './payment/paymentService';\n\n// Global elements\nlet loginButton: HTMLElement | null;\nlet logoutButton: HTMLElement | null;\nlet currentVendorIdToDelete: string | null = null;\n\n// Declare Excel for TypeScript\ndeclare const Excel: any;\n\n// Global flag to track Excel availability\nlet excelEnabled = false;\n\n// Main initialization\nOffice.onReady(() => {\n    initializeAddIn();\n});\n\nasync function initializeAddIn() {\n    try {\n        // Check if we're running in Excel\n        if (Office.context.host === Office.HostType.Excel) {\n            // Check Excel API support safely\n            if (Office.context.requirements?.isSetSupported?.('ExcelApi', 1.1)) {\n                excelEnabled = true;\n                await initializeExcelTable();\n            }\n        }\n        \n        // Initialize payment service\n        PaymentService.getPendingPayments();\n        // Check for payments daily (86400000ms = 1 day)\n        setInterval(() => PaymentService.processScheduledPayments(), 86400000);\n        \n        initializeUI();\n    } catch (error) {\n        console.error(\"Initialization failed:\", error);\n        initializeUI(); // Fallback to UI-only mode\n    }\n}\n\nasync function initializeExcelTable() {\n    if (!excelEnabled) return;\n\n    try {\n        await Excel.run(async (context) => {\n            // Get or create Vendors sheet\n            let vendorsSheet;\n            try {\n                vendorsSheet = context.workbook.worksheets.getItem(\"Vendors\");\n            } catch {\n                vendorsSheet = context.workbook.worksheets.add(\"Vendors\");\n                vendorsSheet.getRange(\"A1:D1\").values = [[\"Vendor Name\", \"Payment Type\", \"Account\", \"Next Payment Date\"]];\n                vendorsSheet.getRange(\"A1:D1\").format.font.bold = true;\n            }\n\n            // Clear and update existing data\n            const vendors = AuthService.getVendors();\n            if (vendors.length > 0) {\n                vendorsSheet.getRange(\"A2:D\" + (vendors.length + 1)).values = \n                    vendors.map(vendor => [\n                        vendor.name,\n                        vendor.paymentType,\n                        vendor.account,\n                        vendor.nextPaymentDate ? new Date(vendor.nextPaymentDate).toLocaleDateString() : \"N/A\"\n                    ]);\n            }\n\n            await context.sync();\n        });\n    } catch (error) {\n        console.warn(\"Excel table initialization failed:\", error);\n        excelEnabled = false;\n    }\n}\n\n\nasync function initializeUI() {\n    loginButton?.removeEventListener('click', handleLogin);\n    logoutButton?.removeEventListener('click', handleLogout);\n\n    if (AuthService.isAuthenticated()) {\n        showApp();\n    } else {\n        showLogin();\n    }\n}\n\nasync function syncVendorsToExcel() {\n    if (!excelEnabled) return;\n\n    try {\n        await Excel.run(async (context) => {\n            const vendorsSheet = context.workbook.worksheets.getItem(\"Vendors\");\n            const vendors = AuthService.getVendors();\n\n            // Clear existing data (keep headers)\n            if (vendors.length > 0) {\n                vendorsSheet.getRange(\"A2:D\" + (vendors.length + 1)).clear();\n            } else {\n                vendorsSheet.getRange(\"A2:D2\").clear();\n            }\n\n            // Add new data\n            vendors.forEach((vendor, index) => {\n                const row = vendorsSheet.getRange(`A${index + 2}:D${index + 2}`);\n                row.values = [\n                    [\n                        vendor.name,\n                        vendor.paymentType,\n                        vendor.account,\n                        vendor.nextPaymentDate ? new Date(vendor.nextPaymentDate).toLocaleDateString() : \"N/A\"\n                    ]\n                ];\n            });\n\n            // Auto-fit columns\n            vendorsSheet.getUsedRange().format.autofitColumns();\n            await context.sync();\n        });\n    } catch (error) {\n        console.warn(\"Excel sync failed:\", error);\n        excelEnabled = false;\n    }\n}\n\n\nfunction showLogin() {\n    const container = document.getElementById('container');\n    if (!container) return;\n\n    container.innerHTML = `\n        <div id=\"login-section\" class=\"banking-container\">\n            <div class=\"banking-header\">\n                <img src=\"../../assets/vendor.jpg\" class=\"banking-logo\" alt=\"Bank Logo\">\n                <h2 class=\"banking-title\">Vendor Payment Portal</h2>\n                <p class=\"banking-subtitle\">Secure access to your payment dashboard</p>\n            </div>\n            \n            <div class=\"banking-input\">\n                <label for=\"username\">User ID</label>\n                <input id=\"username\" type=\"text\" placeholder=\"Enter your user ID\">\n            </div>\n            \n            <div class=\"banking-input\">\n                <label for=\"password\">Password</label>\n                <input id=\"password\" type=\"password\" placeholder=\"Enter your password\">\n            </div>\n            \n            <button id=\"login-button\" class=\"banking-button\">Sign In</button>\n            <p id=\"login-error\" class=\"banking-error\" style=\"display: none;\"></p>\n            \n            <div class=\"banking-footer\">\n                <p>Need help? Contact your system administrator</p>\n            </div>\n        </div>\n    `;\n\n    loginButton = document.getElementById('login-button');\n    loginButton?.addEventListener('click', handleLogin);\n}\n\nfunction handleLogin() {\n    const username = (document.getElementById('username') as HTMLInputElement)?.value;\n    const password = (document.getElementById('password') as HTMLInputElement)?.value;\n    const errorElement = document.getElementById('login-error');\n\n    if (!username || !password) {\n        if (errorElement) {\n            errorElement.textContent = 'Please enter both username and password';\n            errorElement.style.display = 'block';\n        }\n        return;\n    }\n\n    if (AuthService.login(username, password)) {\n        showApp();\n    } else {\n        if (errorElement) {\n            errorElement.textContent = 'Invalid credentials';\n            errorElement.style.display = 'block';\n        }\n    }\n}\n\nfunction handleLogout() {\n    AuthService.logout();\n    initializeUI();\n}\n\nfunction showApp() {\n    const container = document.getElementById('container');\n    if (!container) return;\n\n    container.innerHTML = `\n        <div class=\"banking-container\" style=\"max-width: 800px;\">\n            <div class=\"banking-header\">\n                <img src=\"../../assets/vendor .jpg\" class=\"banking-logo\" alt=\"Vendor Logo\">\n                <h2 class=\"banking-title\">Vendor Management System</h2>\n                <button id=\"logout-button\" class=\"banking-button\" \n                    style=\"position: absolute; top: 20px; right: 20px; width: auto; padding: 8px 16px;\">\n                    Sign Out\n                </button>\n            </div>\n            \n            <div style=\"margin-top: 20px;\">\n                <div style=\"display: flex; gap: 10px; margin-bottom: 20px;\">\n                    <button id=\"add-vendor-button\" class=\"banking-button\">\n                        + Add New Vendor\n                    </button>\n                    <button id=\"process-payments\" class=\"banking-button\">\n                        Process Payments\n                    </button>\n                    <button id=\"retry-pending\" class=\"banking-button\">\n                        Retry Pending\n                    </button>\n                </div>\n                \n                <div id=\"account-balances\" style=\"display: flex; gap: 20px; margin-bottom: 20px;\">\n                    <div class=\"account-balance\">\n                        <h3>Account 1</h3>\n                        <p>$${PaymentService.accountBalances['Account 1'].toLocaleString()}</p>\n                    </div>\n                    <div class=\"account-balance\">\n                        <h3>Account 2</h3>\n                        <p>$${PaymentService.accountBalances['Account 2'].toLocaleString()}</p>\n                    </div>\n                </div>\n                \n                <div id=\"vendors-list\" style=\"max-height: 400px; overflow-y: auto;\">\n                    ${getVendorsHtml()}\n                </div>\n                \n                <div id=\"pending-payments\" style=\"margin-top: 30px;\">\n                    <h3>Pending Payments</h3>\n                    <div id=\"pending-list\">\n                        ${getPendingPaymentsHtml()}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n\n    setupVendorControls();\n    logoutButton = document.getElementById('logout-button');\n    logoutButton?.addEventListener('click', handleLogout);\n    \n    // Add payment event listeners\n    // Update this in the showApp() function\n// Update in showApp() function\ndocument.getElementById('process-payments')?.addEventListener('click', async () => {\n    try {\n        const result = await PaymentService.processScheduledPayments(true);\n        \n        // Show results in UI\n        const resultsHtml = `\n            <div class=\"payment-results\" style=\"margin: 15px 0; padding: 10px; background: #f3f3f3; border-radius: 4px;\">\n                <h4 style=\"margin: 0 0 10px 0;\">Payment Results</h4>\n                <p>Processed: ${result.processed} payments</p>\n                <p>Skipped: ${result.skipped} vendors</p>\n                <p>Pending: ${result.pending} payments</p>\n            </div>\n        `;\n        \n        const container = document.getElementById('pending-payments');\n        if (container) {\n            container.insertAdjacentHTML('afterbegin', resultsHtml);\n            setTimeout(() => {\n                const results = document.querySelector('.payment-results');\n                results?.remove();\n            }, 5000);\n        }\n\n        // Update all data\n        updateAccountBalances();\n        updateVendorsList();\n        showPendingPayments();\n        \n        // Sync to all Excel sheets\n        await syncVendorsToExcel();\n        \n    } catch (error) {\n        console.error(\"Error processing payments:\", error);\n        alert(\"Error processing payments. Check console for details.\");\n    }\n});\n    \n    document.getElementById('retry-pending')?.addEventListener('click', async () => {\n        await PaymentService.retryPendingPayments();\n        updateVendorsList();\n        updateAccountBalances();\n        showPendingPayments();\n        syncVendorsToExcel();\n    });\n}\n\nfunction getVendorsHtml(): string {\n    const vendors = AuthService.getVendors();\n    \n    if (vendors.length === 0) {\n        return `\n            <div style=\"text-align: center; padding: 20px; color: #666;\">\n                No vendors found. Click \"Add New Vendor\" to create one.\n            </div>\n        `;\n    }\n\n    return vendors.map(vendor => `\n        <div class=\"vendor-card\" data-vendor-id=\"${vendor.id}\">\n            <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                <div>\n                    <h3 style=\"margin: 0; color: #0078d4;\">${vendor.name}</h3>\n                    <p style=\"margin: 5px 0; color: #666;\">\n                        Payment: ${vendor.paymentType} | Account: ${vendor.account}\n                    </p>\n                    ${vendor.nextPaymentDate ? `\n                    <p style=\"margin: 5px 0; color: #666; font-size: 0.9em;\">\n                        Next payment: ${new Date(vendor.nextPaymentDate).toLocaleDateString()}\n                    </p>\n                    ` : ''}\n                    ${vendor.pendingPayment ? `\n                    <p style=\"margin: 5px 0; color: #d13438; font-size: 0.9em;\">\n                        Payment pending (insufficient funds)\n                    </p>\n                    ` : ''}\n                </div>\n                <div style=\"display: flex; align-items: center;\">\n                    <button class=\"pay-now\" data-id=\"${vendor.id}\" \n                        style=\"background: none; border: none; color: #0078d4; cursor: pointer; margin-right: 10px;\">\n                        Pay Now\n                    </button>\n                    <button class=\"edit-vendor\" data-id=\"${vendor.id}\" \n                        style=\"background: none; border: none; color: #0078d4; cursor: pointer; margin-right: 10px;\">\n                        Edit\n                    </button>\n                    <button class=\"delete-vendor\" data-id=\"${vendor.id}\" \n                        style=\"background: none; border: none; color: #d13438; cursor: pointer;\">\n                        Delete\n                    </button>\n                </div>\n            </div>\n        </div>\n    `).join('');\n}\n\nfunction getPendingPaymentsHtml(): string {\n    const payments = PaymentService.getPendingPayments();\n    const vendors = AuthService.getVendors();\n    \n    if (payments.length === 0) {\n        return '<p style=\"color: #666;\">No pending payments</p>';\n    }\n\n    return payments.map(payment => {\n        const vendor = vendors.find(v => v.id === payment.vendorId);\n        return `\n            <div class=\"pending-payment\" style=\"padding: 10px; border-bottom: 1px solid #eee;\">\n                <div style=\"display: flex; justify-content: space-between;\">\n                    <div>\n                        <strong>${vendor?.name || 'Unknown Vendor'}</strong>\n                        <p>Amount: $${payment.amount} | Account: ${payment.account}</p>\n                        <p>Date: ${new Date(payment.date).toLocaleDateString()}</p>\n                    </div>\n                    <button class=\"retry-single\" data-id=\"${payment.vendorId}\" \n                        style=\"background: none; border: none; color: #0078d4; cursor: pointer;\">\n                        Retry\n                    </button>\n                </div>\n            </div>\n        `;\n    }).join('');\n}\n\nfunction setupVendorControls() {\n    // Add Vendor Button\n    document.getElementById('add-vendor-button')?.addEventListener('click', () => showVendorForm());\n    \n    // Vendor List Event Delegation\n    document.getElementById('vendors-list')?.addEventListener('click', (e) => {\n        const target = e.target as HTMLElement;\n        const vendorId = target.getAttribute('data-id');\n        \n        if (target.classList.contains('delete-vendor') && vendorId) {\n            currentVendorIdToDelete = vendorId;\n            showDeleteConfirmation();\n        } else if (target.classList.contains('edit-vendor') && vendorId) {\n            const vendor = AuthService.getVendors().find(v => v.id === vendorId);\n            if (vendor) showVendorForm(vendor);\n        } else if (target.classList.contains('pay-now') && vendorId) {\n            handlePayNow(vendorId);\n        }\n    });\n    \n    // Pending Payments Event Delegation\n    document.getElementById('pending-list')?.addEventListener('click', (e) => {\n        const target = e.target as HTMLElement;\n        const vendorId = target.getAttribute('data-id');\n        \n        if (target.classList.contains('retry-single') && vendorId) {\n            PaymentService.retryPaymentForVendor(vendorId).then(() => {\n                updateAccountBalances();\n                updateVendorsList();\n                showPendingPayments();\n                syncVendorsToExcel();\n            });\n        }\n    });\n    \n    // Confirm Delete Button\n    document.getElementById('confirm-delete')?.addEventListener('click', () => {\n        if (currentVendorIdToDelete) {\n            deleteVendor(currentVendorIdToDelete);\n            hideDeleteConfirmation();\n        }\n    });\n    \n    // Cancel Delete Button\n    document.getElementById('cancel-delete')?.addEventListener('click', hideDeleteConfirmation);\n}\n\nasync function handlePayNow(vendorId: string) {\n    const vendor = AuthService.getVendors().find(v => v.id === vendorId);\n    if (!vendor) return;\n\n    let amount = PaymentService.paymentRules.getBaseAmount(vendorId);\n    \n    // For on-demand vendors, prompt for amount\n    if (PaymentService.paymentRules.getPaymentSchedule(vendorId) === 'on-demand') {\n        const input = prompt(`Enter payment amount for ${vendor.name}:`, amount.toString());\n        if (input === null) return; // User cancelled\n        amount = parseFloat(input) || 0;\n        if (amount <= 0) {\n            alert('Please enter a valid positive amount');\n            return;\n        }\n    }\n\n    const result = await PaymentService.processOnDemandPayment(vendorId, amount);\n    \n    if (result) {\n        updateAccountBalances();\n        updateVendorsList();\n        showPendingPayments();\n        syncVendorsToExcel();\n    }\n}\n\nfunction updateAccountBalances() {\n    const account1 = document.querySelector('#account-balances div:nth-child(1) p');\n    const account2 = document.querySelector('#account-balances div:nth-child(2) p');\n    \n    if (account1) account1.textContent = `$${PaymentService.accountBalances['Account 1'].toLocaleString()}`;\n    if (account2) account2.textContent = `$${PaymentService.accountBalances['Account 2'].toLocaleString()}`;\n}\n\nfunction updateVendorsList() {\n    const vendorsList = document.getElementById('vendors-list');\n    if (vendorsList) {\n        vendorsList.innerHTML = getVendorsHtml();\n    }\n}\n\nfunction showPendingPayments() {\n    const pendingList = document.getElementById('pending-list');\n    if (pendingList) {\n        pendingList.innerHTML = getPendingPaymentsHtml();\n    }\n}\n\nfunction showDeleteConfirmation() {\n    const dialog = document.getElementById('confirm-dialog');\n    if (dialog) dialog.style.display = 'flex';\n}\n\nfunction hideDeleteConfirmation() {\n    const dialog = document.getElementById('confirm-dialog');\n    if (dialog) dialog.style.display = 'none';\n    currentVendorIdToDelete = null;\n}\n\nfunction deleteVendor(vendorId: string) {\n    try {\n        AuthService.deleteVendor(vendorId);\n        syncVendorsToExcel(); // Ensure Excel is updated\n        \n        const vendorCard = document.querySelector(`.vendor-card[data-vendor-id=\"${vendorId}\"]`);\n        vendorCard?.remove();\n        \n        if (AuthService.getVendors().length === 0) {\n            const vendorsList = document.getElementById('vendors-list');\n            if (vendorsList) {\n                vendorsList.innerHTML = `\n                    <div style=\"text-align: center; padding: 20px; color: #666;\">\n                        No vendors found. Click \"Add New Vendor\" to create one.\n                    </div>\n                `;\n            }\n        }\n    } catch (error) {\n        console.error('Error deleting vendor:', error);\n        alert('Error deleting vendor. Please try again.');\n    }\n}\n\nfunction showVendorForm(vendor?: Vendor) {\n    const container = document.getElementById('container');\n    if (!container) return;\n\n    container.innerHTML = `\n        <div class=\"banking-container\" style=\"max-width: 600px;\">\n            <div class=\"banking-header\">\n                <h2 class=\"banking-title\">${vendor ? 'Edit Vendor' : 'Add New Vendor'}</h2>\n            </div>\n            \n            <div style=\"margin-top: 20px;\">\n                <div class=\"banking-input\">\n                    <label>Vendor Name</label>\n                    <input id=\"vendor-name\" type=\"text\" value=\"${vendor?.name || ''}\" \n                        placeholder=\"Enter vendor name\" style=\"width: 100%;\">\n                </div>\n                \n                <div class=\"banking-input\">\n                    <label>Payment Type</label>\n                    <select id=\"payment-type\" style=\"width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 4px;\">\n                        <option value=\"Weekly\" ${vendor?.paymentType === 'Weekly' ? 'selected' : ''}>Weekly</option>\n                        <option value=\"Biweekly\" ${vendor?.paymentType === 'Biweekly' ? 'selected' : ''}>Biweekly</option>\n                        <option value=\"On-Demand\" ${vendor?.paymentType === 'On-Demand' ? 'selected' : ''}>On-Demand</option>\n                    </select>\n                </div>\n                \n                <div class=\"banking-input\">\n                    <label>Assigned Account</label>\n                    <select id=\"assigned-account\" style=\"width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 4px;\">\n                        <option value=\"Account 1\" ${vendor?.account === 'Account 1' ? 'selected' : ''}>Account 1</option>\n                        <option value=\"Account 2\" ${vendor?.account === 'Account 2' ? 'selected' : ''}>Account 2</option>\n                    </select>\n                </div>\n                \n                <div style=\"display: flex; gap: 10px; margin-top: 30px;\">\n                    <button id=\"save-vendor\" class=\"banking-button\" style=\"flex: 1;\">\n                        ${vendor ? 'Update' : 'Save'} Vendor\n                    </button>\n                    <button id=\"cancel-form\" class=\"banking-button\" \n                        style=\"flex: 1; background: #f3f3f3; color: #333; border: 1px solid #ddd;\">\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    `;\n\n    document.getElementById('save-vendor')?.addEventListener('click', async () => {\n        const nameInput = document.getElementById('vendor-name') as HTMLInputElement;\n        const paymentTypeSelect = document.getElementById('payment-type') as HTMLSelectElement;\n        const accountSelect = document.getElementById('assigned-account') as HTMLSelectElement;\n\n        if (!nameInput.value.trim()) {\n            alert('Please enter a vendor name');\n            return;\n        }\n\n        if (vendor) {\n            // Update existing vendor\n            const updatedVendor = {\n                ...vendor,\n                name: nameInput.value.trim(),\n                paymentType: paymentTypeSelect.value as 'Weekly' | 'Biweekly' | 'On-Demand',\n                account: accountSelect.value as 'Account 1' | 'Account 2'\n            };\n            AuthService.updateVendor(updatedVendor);\n        } else {\n            // Create new vendor\n            AuthService.addVendor({\n                name: nameInput.value.trim(),\n                paymentType: paymentTypeSelect.value as 'Weekly' | 'Biweekly' | 'On-Demand',\n                account: accountSelect.value as 'Account 1' | 'Account 2'\n            });\n        }\n        \n        await syncVendorsToExcel(); // Ensure Excel is updated\n        showApp();\n    });\n\n    document.getElementById('cancel-form')?.addEventListener('click', showApp);\n}\n\n\ninterface Vendor {\n    id: string;\n    name: string;\n    paymentType: 'Weekly' | 'Biweekly' | 'On-Demand';\n    account: 'Account 1' | 'Account 2';\n    lastPaymentDate?: Date;\n    nextPaymentDate?: Date;\n    pendingPayment?: boolean;\n}"],"names":["localStorage","removeItem","AuthService","login","username","password","setItem","logout","isAuthenticated","getItem","getVendors","vendors","JSON","parse","saveVendors","stringify","addVendor","vendor","this","newVendor","_objectSpread","id","Date","now","toString","push","updateVendor","updatedVendor","index","findIndex","v","deleteVendor","filter","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","loginButton","logoutButton","PaymentService","accountBalances","paymentRules","getBaseAmount","vendorId","idNum","parseInt","getPaymentSchedule","getDefaultAccount","processScheduledPayments","_arguments","_this","_callee","forceProcess","today","result","payments","_context","undefined","console","log","concat","toDateString","getDay","processed","skipped","pending","getPendingPayments","forEach","nextPaymentDate","amount","createPayment","processPayments","status","processOnDemandPayment","_this2","_callee2","schedule","payment","_context2","find","confirm","name","lastPaymentDate","getNextPaymentDate","processPayment","retryPaymentForVendor","_this3","_callee3","pendingPayment","success","_context3","pendingPayments","date","account","_this4","_callee4","_iterator","_step","_t","_context4","_createForOfIteratorHelper","s","_this5","_callee5","_context5","updateVendorPaymentDate","updateAccountBalancesUI","addToPendingPayments","alert","setDate","getDate","getWeekNumber","firstDayOfYear","getFullYear","pastDaysOfYear","getTime","Math","ceil","stored","retryPendingPayments","_this6","_callee6","_iterator2","_step2","_t2","_context6","account1Element","document","querySelector","account2Element","textContent","toLocaleString","currentVendorIdToDelete","excelEnabled","_initializeAddIn","_Office$context$requi","_Office$context$requi2","Office","context","host","HostType","Excel","requirements","isSetSupported","initializeExcelTable","setInterval","initializeUI","error","_initializeExcelTable","_t3","run","_ref4","vendorsSheet","workbook","worksheets","_unused","add","getRange","values","format","font","bold","map","paymentType","toLocaleDateString","sync","_x2","warn","_initializeUI","_callee7","_loginButton2","_logoutButton2","_context7","removeEventListener","handleLogin","handleLogout","showApp","showLogin","syncVendorsToExcel","_syncVendorsToExcel","_callee9","_t4","_context9","_ref5","_callee8","_context8","clear","getUsedRange","autofitColumns","_x3","_loginButton","container","getElementById","innerHTML","addEventListener","_document$getElementB","_document$getElementB2","errorElement","style","display","_logoutButton","_document$getElementB3","_document$getElementB4","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","_document$getElementB9","getVendorsHtml","getPendingPaymentsHtml","showVendorForm","dialog","target","getAttribute","classList","contains","_x","_handlePayNow","handlePayNow","updateAccountBalances","updateVendorsList","showPendingPayments","vendorCard","remove","vendorsList","hideDeleteConfirmation","resultsHtml","_container","insertAdjacentHTML","setTimeout","results","join","_callee0","input","_context0","prompt","parseFloat","account1","account2","pendingList","_document$getElementB0","_document$getElementB1","nameInput","paymentTypeSelect","accountSelect","trim","onReady","initializeAddIn"],"sourceRoot":""}